package main

import (
	"encoding/base64"
)

func base64decodeCss(input string) string {
    content, err := base64.StdEncoding.DecodeString(input)
    if err != nil {
        return input
    }
    return string(content)
}




var CssReset = base64decodeCss(`LyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC8gCiAgIHYyLjAgfCAyMDExMDEyNgogICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKQoqLwoKaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLApoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsCmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSwKZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLApzbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLApiLCB1LCBpLCBjZW50ZXIsCmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksCmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLAp0YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCwKYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsIApmaWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIAptZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSwKdGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHsKCW1hcmdpbjogMDsKCXBhZGRpbmc6IDA7Cglib3JkZXI6IDA7Cglmb250LXNpemU6IDEwMCU7Cglmb250OiBpbmhlcml0OwoJdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOwp9Ci8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi8KYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgCmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7CglkaXNwbGF5OiBibG9jazsKfQpib2R5IHsKCWxpbmUtaGVpZ2h0OiAxOwp9Cm9sLCB1bCB7CglsaXN0LXN0eWxlOiBub25lOwp9CmJsb2NrcXVvdGUsIHEgewoJcXVvdGVzOiBub25lOwp9CmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLApxOmJlZm9yZSwgcTphZnRlciB7Cgljb250ZW50OiAnJzsKCWNvbnRlbnQ6IG5vbmU7Cn0KdGFibGUgewoJYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKCWJvcmRlci1zcGFjaW5nOiAwOwp9`)

var CssStyle = base64decodeCss(`CmJvZHkgewogICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7CiAgICAvKiB3aWR0aDogOTAlOyAqLwogICAgbWFyZ2luOiAyZW07CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KCgpib2R5W2RhdGEtcGFnZT1yb290XSA+IC5oZWFkZXIsIGJvZHlbZGF0YS1wYWdlPXRocmVhZF0gPiAuaGVhZGVyIHsKICAgIG1hcmdpbjogMWVtIGF1dG87CiAgICAvKiBwYWRkaW5nLWJvdHRvbTogMWVtOyAqLwogICAgLyogYm9yZGVyLWJvdHRvbTogMC41cHggc29saWQgYmxhY2s7ICovCn0KCmJvZHlbZGF0YS1wYWdlPW1lc3NhZ2VdID4gLmhlYWRlciB7CiAgICBtYXJnaW46IGF1dG8gYXV0byAzZW0gMTJlbTsKICAgIHBhZGRpbmctYm90dG9tOiAxZW07Cn0KCi5oZWFkZXIgPiBoMS50aXRsZSB7CiAgICBmb250LXNpemU6IDE4MCU7CiAgICBmb250LXdlaWdodDogYm9sZDsKfQoKLmhlYWRlciA+IC5iYy1ibG9jayB7Cm1hcmdpbi10b3A6IC4zZW07Cn0KCi5oZWFkZXIgPiAuYmMtYmxvY2sgPiAuYmMgewogICAgZm9udC1zaXplOiA4MCU7CiAgICAvKiBmb250LWZhbWlseTogbW9ub3NwYWNlOwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7ICovCn0KCmEubGluayB7CiAgICBjb2xvcjogI2M3MDAyZTsKICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7CiAgICBmb250LXdlaWdodDogYm9sZDsKfQoKLm1lc3NhZ2UtYmxvY2ssIC5hbnN3ZXItYmxvY2sgewogICAgZGlzcGxheTogZmxleDsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHBhZGRpbmc6IDFlbSAxZW0gMWVtIDA7Cn0KCi5tZXNzYWdlLWhlYWRlciwgLmFuc3dlci1oZWFkZXItYmxvY2sgewogICAgZmxleDogMCAwIDEyZW07CiAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgIHBhZGRpbmctcmlnaHQ6IDFlbTsKICAgIGxpbmUtaGVpZ2h0OiAxNDAlOwogICAgZm9udC1zaXplOiAxMDAlOwogICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTsKfQoKLnNlY3Rpb24tbGluayB7CiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIGZvbnQtc2l6ZTogMTI0JTsKICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwogICAgY29sb3I6IGJsYWNrOwp9Cgouc2VjdGlvbi1saW5rOmhvdmVyIHsKICAgIGNvbG9yOmdyZXk7Cn0KCi5tZXNzYWdlLWJvZHksIC5hbnN3ZXItYm9keSB7CiAgICBwYWRkaW5nOiAwIDAgMCAxZW07CiAgICB3aWR0aDogNDJlbTsKfQoKLm1lc3NhZ2UtYm9keSBwLCAuYW5zd2VyLWJvZHkgcCB7CiAgICBtaW4taGVpZ2h0OiAxZW07Cn0KCmgxIHsKICAgIGZvbnQtc2l6ZTogMzAwJTsKfQpoMiB7CiAgICBmb250LXNpemU6IDE4MCU7Cn0KaDMgewogICAgZm9udC1zaXplOiAxMjAlOwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCmVtIHsKICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsKfQpzdHJvbmcgewogICAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi5tZXNzYWdlLXNlbmRlciB7CiAgICAvKiBmb250LXN0eWxlOiBpdGFsaWM7ICovCiAgICBmb250LXNpemU6IDkwJTsKfQoKLm1lc3NhZ2UtZGF0ZSB7CiAgICBmb250LXNpemU6IDgwJTsKfQoKLmFuc3dlci12aWV3IHsKICAgIGZvbnQtc2l6ZTogODAlOwp9CgogLm1lc3NhZ2UtaGVhZGVyID4gLnBhcmVudCB7CmZvbnQtc2l6ZTogODAlOwp9CgoKCnAucGFyYWdyYXBoIHsKICAgIHBhZGRpbmctYm90dG9tOiAxZW07Cn0KCi5hbnN3ZXItYm9keSAudml6LWJsb2NrIHsKICAgIG1hcmdpbjogMWVtIDA7Cn0KCmltZyB7CiAgICBtYXgtd2lkdGg6MTAwJTsKfQoKLmFuc3dlci1saW5rIGEubGluayB7CiAgICBjb2xvcjojMjE5NmYzOwogICAgZm9udC1zaXplOiA4MCU7Cn0KCgoKLnRvcGljIHsKICAgIG1hcmdpbi1ib3R0b206IDFlbTsKICAgIGZvbnQtc2l6ZTogMTIwJTsKICAgIHdpZHRoOiAzMDBweDsKICAgIGZsb2F0OiBsZWZ0Owp9CgoudG9waWMgLnRvcGljLWxpbmsgewogICAgZm9udC1zaXplOiAxNDAlOwp9CgoudG9waWMtY291bnR7CiAgICBmb250LXNpemU6IHNtYWxsOwp9CgpzcGFuLnRvcGljLXRzIHsKICAgIGZvbnQtc2l6ZTogc21hbGw7Cn0KLm1lc3NhZ2UtaXRlbSB7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjVlbTsKfQoKLm1lc3NhZ2UtaXRlbS1zZW5kZXIgewogICAgZm9udC1zaXplOiA2OSU7CiAgICBmb250LXN0eWxlOiBpdGFsaWM7Cn0KCgpzcGFuLm1lc3NhZ2UtaXRlbS10cyB7CiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlOwogICAgZm9udC1zaXplOiA2NCU7CiAgICBjb2xvcjogIzlFOUU5RTsKfQoKLm1lc3NhZ2UtYm9keSwuYW5zd2VyLWJvZHkgcCB7CiAgICBsaW5lLWhlaWdodDogMTQwJTsKfQoKLnJlbG9hZGVyIHsKICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgIHRvcDogMDsKICAgIGxlZnQ6IDA7CiAgICByaWdodDogMDsKICAgIGhlaWdodDogYXV0bzsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLnJlbG9hZGVyLWlubmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDMsIDIzOSwgMjM5KTsKICAgICAgICBwYWRkaW5nOiAxMnB4Owp9Ci5yZWxvYWRlciBhewogICAgZm9udC1zaXplOiA5MCU7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIGNvbG9yOiAjMGQ2OTAzOwp9CgoKLnRvcGljLXJlcGx5dG8tYmxvY2sgewogICAgZm9udC1zaXplOiA4MCU7CiAgICBsaW5lLWhlaWdodDogMTIwJTsKICAgIG1hcmdpbi1ib3R0b206IDFlbTsKICAgIC8qIGJvcmRlci1ib3R0b206IDAuNXB4IHNvbGlkIGJsYWNrOyAqLwogICAgcGFkZGluZy1ib3R0b206IDFlbTsKICAgIG1heC13aWR0aDogNDAwcHg7Cn0KCi5maXJzdC1zdWJqZWN0IHsKICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsKICAgIGNvbG9yOiBibGFjazsKfQouZmlyc3Qtc3ViamVjdDpob3ZlcnsKICAgIGNvbG9yOiBncmV5Owp9CgoubmV3LXJlcGx5IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmVmYmY7Cn0KCi5zZWFyY2gtYm94IHsKICAgIG1hcmdpbi1ib3R0b206IDFlbTsKfQoKLnRvcGljLWluZm8gewogICAgZm9udC1zaXplOiA2MCU7CiAgICBsaW5lLWhlaWdodDogMTQwJTsKICAgIG1hcmdpbi10b3A6IC41ZW07CiAgICBjb2xvcjogIzU2NTE1MTsKfQoKLnNlYXJjaC1yZXN1bHQgewogICAgbWFyZ2luLWJvdHRvbTogLjVlbTsKfQouc2VhcmNoLXJlc3VsdCBwIHsKICAgIGZvbnQtc2l6ZTogODAlOwogICAgbGluZS1oZWlnaHQ6IDE0MCU7Cn0KCgpAbWVkaWEgc2NyZWVuIGFuZCAob3JpZW50YXRpb246IHBvcnRyYWl0KSwgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0OGVtKSAgewpib2R5IHsKICAgIG1hcmdpbjogMmVtIDFlbTsKfQoKYm9keVtkYXRhLXBhZ2U9bWVzc2FnZV0gPiAuaGVhZGVyIHsKICAgIG1hcmdpbjogMWVtIGF1dG87CiAgICBwYWRkaW5nLWJvdHRvbTogMWVtOwp9CgoubWVzc2FnZS1ibG9jaywgLmFuc3dlci1ibG9jayB7CiAgICBkaXNwbGF5OiBpbml0aWFsOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgcGFkZGluZzogaW5pdGlhbDsKfQoKLm1lc3NhZ2UtaGVhZGVyLCAuYW5zd2VyLWhlYWRlci1ibG9jayB7CiAgICBmbGV4OiBub25lOwogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIGxpbmUtaGVpZ2h0OiAxNDAlOwogICAgZm9udC1zaXplOiAxMDAlOwogICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTsKfQoKLm1lc3NhZ2UtYm9keSwgLmFuc3dlci1ib2R5IHsKICAgIHBhZGRpbmc6IDAuM2VtIDAgLjdlbSAwOwogICAgd2lkdGg6IDEwMCU7Cn0KCi5tZXNzYWdlLXNlbmRlciB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBmb250LXNpemU6IDkwJTsKfQoKLm1lc3NhZ2UtZGF0ZSB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBmb250LXNpemU6IDgwJTsKfQoKLmFuc3dlci12aWV3IHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIGZvbnQtc2l6ZTogODAlOwp9Ci5hbnN3ZXItbGluayB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0KCiAubWVzc2FnZS1oZWFkZXIgPiAucGFyZW50IHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKZm9udC1zaXplOiA4MCU7Cn0KCi5hbnN3ZXIgewogICAgYm9yZGVyOm5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKfQoKfQ==`)

